<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on PoolBee的博客</title>
    <link>http://localhost:1313/post/</link>
    <description>Recent content in Posts on PoolBee的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sun, 29 Dec 2024 09:06:00 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/post/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>IDEA创建的java项目的5种类型</title>
      <link>http://localhost:1313/post/idea01/</link>
      <pubDate>Sun, 29 Dec 2024 09:06:00 +0000</pubDate>
      <guid>http://localhost:1313/post/idea01/</guid>
      <description>IDEA创建的5种类型（暂时4种） IDEA创建项目的5种方法 Java开发就5种 一、普通java项目 学习语法，只能在控制台输出 一路next-next，输入项目名称，finish即可。&#xA;就这样是普通java项目&#xA;二、普通Javaweb项目 后端jdbc 前端html任何都行 一般只用Servlet项目，实际工作中比较少 创建步骤：&#xA;JDK选择1.8&#xA;选择Java EE 8企业版8&#xA;选择你的tomcat目录，tomcat解压后的目录。&#xA;3.选择Web Application 出现项目结构&#xA;项目结构设置 点击右上角项目结构设置&#xA;设置Language level为JDK8&#xA;JDK 8 的新特性：Lambdas，type annotation etc. 可以根据需要为每个模块配置模块特定的语言级别。这里设置为：JDK8&#xA;项目结构里的Facets&#xA;Idea中的facets和artifacts的介绍_idea facets是什么-CSDN博客&#xA;Facets（方面）这里，查看web项目的web.xml路径&#xA;及项目部署的根目录是不是在web下。&#xA;Artifats这里war包也要使用&#xA;打开你的web.xml文件&#xA;如果没有需要新建Web.xml文件&#xA;复制tomcat目录D:\tomcat\apache-tomcat-8.5.57\apache-tomcat-8.5.57\webapps下的web.xml内容&#xA;粘贴到项目的WEB-INF的web.xml中&#xA;&amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!-- Licensed to the Apache Software Foundation (ASF) under one or more contributor license agreements. See the NOTICE file distributed with this work for additional information regarding copyright ownership.</description>
    </item>
    <item>
      <title>HTML5知识总结</title>
      <link>http://localhost:1313/post/html5-01/</link>
      <pubDate>Tue, 24 Dec 2024 17:33:00 +0000</pubDate>
      <guid>http://localhost:1313/post/html5-01/</guid>
      <description>HTML5知识总结 HTML：超文本标记语言。&#xA;超文本：文字、图片、音频、视频、动画等。&#xA;1993-2013&#xA;2013年HTML5出现&#xA;HTML让浏览器之间让网页与电脑之间的交互进行了标准化。&#xA;HTML5是W3C和WHATWG合作的结果2006年开始决定创建HTML5。&#xA;Web Hypertext Application Technology Working Group（网络超文本应用技术工作组）：一个致力于开发和维护HTML和API等Web技术标准的组织 W3C的标准包括&#xA;结构、表现、行为标准：DOM文档对象模型、javascript。&#xA;HTML5 教程 | 菜鸟教程&#xA;一个HTML文件&#xA;doctype：告诉浏览器告诉我们要使用什么规范&#xA;html标签：总的标签，所有的代码都要写在这里面。&#xA;head：网页端头部&#xA;body：网页主体&#xA;title：网页端标题，就是浏览器上的&#xA;meta：描述性标签，用来描述我们网站的信息。&#xA;搜索的时候，网页的搜索就是对meta进行搜索的 做seo的时候可以用 content： 一、网页基本标签 历史： (1)标题标签h12345 br比较紧凑而p标签行之间有距离。&#xA;(2)段落标签p (3)换行标签br (4)水平线标签hr (5)字体样式标签srong、em (6)注释和特殊符号 使用转义字符表示&#xA;&amp;lt;!-- 特殊符号 使用转义字符表示 --&amp;gt; &amp;lt;!-- 空格无论多少渲染出来只有一个格 --&amp;gt; 空 格： 空&amp;amp;nbsp;格 空&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;&amp;amp;nbsp;格 &amp;lt;!-- 大于号 --&amp;gt; &amp;amp;gt; &amp;lt;br/&amp;gt; &amp;lt;!-- 小于号 --&amp;gt; &amp;amp;lt; &amp;lt;br/&amp;gt; &amp;lt;!-- 版权符号 --&amp;gt; &amp;amp;copy;版权所有 &amp;lt;!-- 记忆方法 --&amp;gt; &amp;amp;g 根据代码提示即可 输入一个&amp;amp;然后输入g提示；</description>
    </item>
    <item>
      <title>Datawhale冬令营第二期-动手学AI辅助编程</title>
      <link>http://localhost:1313/post/marscode/</link>
      <pubDate>Mon, 23 Dec 2024 17:36:00 +0000</pubDate>
      <guid>http://localhost:1313/post/marscode/</guid>
      <description>豆包MarsCode 是豆包旗下的AI编程助手，支持主流的编程语言和IDE，提供单行代码或整个函数的编写建议。&#xA;我之前体验过vscode的插件，Baidu Comate，基本能实现豆包MarsCode的功能。&#xA;一、相比之下，豆包 MarsCode - 文档增加了，MarsCode IDE。&#xA;这是一个云端 AI IDE 平台，提供 C、C++、C#、Go、JavaScript、Java、Node.js、Rust、TypeScript 等语言的开发环境和模板。&#xA;这就非常方便了。&#xA;二、开发文档写的很全面，而且依靠豆包的名声，使用友好程度和使用人数我觉得远大于Baidu Comate。&#xA;番茄时钟开发 体验了豆包MarsCode，就发现AI对话框内能实时渲染出界面，类似于claude的Artifacts，体验不错。&#xA;优点：一键插入代码，不需要再复制粘贴了。&#xA;缺点：但是生成代码速度比较慢&#xA;Datawhale-AI活动&#xA;在给的prompt的中&#xA;请你基于html、tailwind css和javascript，帮我设计一个“番茄时钟”。要求UI简洁美观大方，同时具有呼吸感，点击开始计时、点击暂停计时和重置计时的功能能够完美实现&#xD;请你基于html、tailwind css和javascript，帮我设计一个“井字棋游戏”。要求UI简洁美观大方，同时具有呼吸感，人类玩家以及电脑玩家放置棋子，游戏胜负平局判定条件能够完美实现 都提到了一个词呼吸感，引出了第二天的学习内容有关关键词唤醒。&#xA;呼吸感这个词真是一个好词。&#xA;在摄影领域是要有生命力，电影领域是：就是好萊塢業界所稱的手搖鏡頭(hand-held camera)或晃動鏡頭(shaky camera)。最早源自於紀錄片拍攝與1960年興起的法國真實電影(Cinéma vérité)流派。&#xA;设计领域又是一个复杂的词语。&#xA;我觉得我理解不了这种感觉， 不过大模型学习这类东西倒是很擅长，学习这类不确定的事物的特征然后再表述出来，很难用语言表述出来的这种感觉，大模型反而做的很好。 这个词真是大模型的优势。</description>
    </item>
    <item>
      <title>Mysql、tomcat、sql语句</title>
      <link>http://localhost:1313/post/mysql01/</link>
      <pubDate>Mon, 23 Dec 2024 16:24:00 +0000</pubDate>
      <guid>http://localhost:1313/post/mysql01/</guid>
      <description>Mysql安装 检验是否安装 命令行提示 cmd中验证 mysql -u root -p navicat17连接远程的数据库 输入地址及密码，使用navicat17&#xA;tomcat安装 我的tomcat目录&#xA;D:\tomcat\apache-tomcat-8.5.57&#xA;如何创建表 一、了解表和表之间的关系 四种关系： 没有关系 一对一 1对多或多对1 多对多 关联字段可以设置在任意的一张表中&#xA;这里的多表指的是：多对一的关系。&#xA;SQL语句 新建数据库 全选、运行、刷新 DROP TABLE IF EXISTS `class`; CREATE TABLE `class` ( `id` int(11) NOT NULL AUTO_INCREMENT, `class_num` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;班级号&amp;#39;, `class_name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;班级名称&amp;#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Compact; -- ---------------------------- -- Records of class -- ---------------------------- INSERT INTO `class` VALUES (1, &amp;#39;20201001&amp;#39;, &amp;#39;软件工程&amp;#39;); INSERT INTO `class` VALUES (2, &amp;#39;20201002&amp;#39;, &amp;#39;计算机科学&amp;#39;); INSERT INTO `class` VALUES (3, &amp;#39;20201003&amp;#39;, &amp;#39;网络工程&amp;#39;); INSERT INTO `class` VALUES (4, &amp;#39;20201005&amp;#39;, &amp;#39;数学&amp;#39;); -- ---------------------------- -- Table structure for course -- ---------------------------- DROP TABLE IF EXISTS `course`; CREATE TABLE `course` ( `id` int(11) NOT NULL AUTO_INCREMENT COMMENT &amp;#39;选课表&amp;#39;, `cno` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;课程号&amp;#39;, `gradeName` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;课程名称&amp;#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 5 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Compact; -- ---------------------------- -- Records of course -- ---------------------------- INSERT INTO `course` VALUES (1, &amp;#39;1001&amp;#39;, &amp;#39;数学&amp;#39;); INSERT INTO `course` VALUES (2, &amp;#39;1002&amp;#39;, &amp;#39;语文&amp;#39;); INSERT INTO `course` VALUES (3, &amp;#39;1003&amp;#39;, &amp;#39;英语&amp;#39;); -- ---------------------------- -- Table structure for relationship -- ---------------------------- DROP TABLE IF EXISTS `relationship`; CREATE TABLE `relationship` ( `id` int(11) NOT NULL AUTO_INCREMENT, `sno` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;学号&amp;#39;, `cno` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;课程号&amp;#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 39 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Compact; -- ---------------------------- -- Records of relationship -- ---------------------------- INSERT INTO `relationship` VALUES (1, &amp;#39;202001&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (2, &amp;#39;202001&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (3, &amp;#39;202001&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (4, &amp;#39;202002&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (5, &amp;#39;202002&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (6, &amp;#39;202003&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (7, &amp;#39;202004&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (8, &amp;#39;202004&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (9, &amp;#39;202004&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (10, &amp;#39;202005&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (11, &amp;#39;202005&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (12, &amp;#39;202006&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (13, &amp;#39;202006&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (14, &amp;#39;202006&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (15, &amp;#39;202007&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (16, &amp;#39;202009&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (17, &amp;#39;202009&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (18, &amp;#39;202009&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (19, &amp;#39;202010&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (20, &amp;#39;202010&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (21, &amp;#39;202010&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (22, &amp;#39;202011&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (23, &amp;#39;202012&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (24, &amp;#39;202012&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (25, &amp;#39;202013&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (26, &amp;#39;202013&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (27, &amp;#39;202014&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (28, &amp;#39;202014&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (29, &amp;#39;202014&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (30, &amp;#39;202015&amp;#39;, &amp;#39;1003&amp;#39;); INSERT INTO `relationship` VALUES (31, &amp;#39;202015&amp;#39;, &amp;#39;1001&amp;#39;); INSERT INTO `relationship` VALUES (32, &amp;#39;202016&amp;#39;, &amp;#39;1002&amp;#39;); INSERT INTO `relationship` VALUES (33, &amp;#39;202016&amp;#39;, &amp;#39;1003&amp;#39;); -- ---------------------------- -- Table structure for student -- ---------------------------- DROP TABLE IF EXISTS `student`; CREATE TABLE `student` ( `id` int(11) NOT NULL AUTO_INCREMENT, `name` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL, `sex` varchar(255) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL, `age` int(11) NOT NULL, `sno` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin NOT NULL COMMENT &amp;#39;学号&amp;#39;, `class_num` varchar(11) CHARACTER SET utf8mb4 COLLATE utf8mb4_bin DEFAULT NULL COMMENT &amp;#39;班级号&amp;#39;, PRIMARY KEY (`id`) USING BTREE ) ENGINE = InnoDB AUTO_INCREMENT = 17 CHARACTER SET = utf8mb4 COLLATE = utf8mb4_bin ROW_FORMAT = Compact; -- ---------------------------- -- Records of student -- ---------------------------- INSERT INTO `student` VALUES (1, &amp;#39;张三&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202001&amp;#39;, &amp;#39;20201001&amp;#39;); INSERT INTO `student` VALUES (2, &amp;#39;李四&amp;#39;, &amp;#39;男&amp;#39;, 21, &amp;#39;202002&amp;#39;, &amp;#39;20201001&amp;#39;); INSERT INTO `student` VALUES (3, &amp;#39;王五&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202003&amp;#39;, &amp;#39;20201001&amp;#39;); INSERT INTO `student` VALUES (4, &amp;#39;张安&amp;#39;, &amp;#39;女&amp;#39;, 23, &amp;#39;202004&amp;#39;, &amp;#39;20201001&amp;#39;); INSERT INTO `student` VALUES (5, &amp;#39;萨达&amp;#39;, &amp;#39;女&amp;#39;, 21, &amp;#39;202005&amp;#39;, &amp;#39;20201001&amp;#39;); INSERT INTO `student` VALUES (6, &amp;#39;阿斯蒂芬&amp;#39;, &amp;#39;女&amp;#39;, 22, &amp;#39;202006&amp;#39;, &amp;#39;20201002&amp;#39;); INSERT INTO `student` VALUES (7, &amp;#39;广大儒风&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202007&amp;#39;, &amp;#39;20201002&amp;#39;); INSERT INTO `student` VALUES (8, &amp;#39;安顺&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202008&amp;#39;, &amp;#39;20201002&amp;#39;); INSERT INTO `student` VALUES (9, &amp;#39;东方&amp;#39;, &amp;#39;女&amp;#39;, 20, &amp;#39;202009&amp;#39;, &amp;#39;20201002&amp;#39;); INSERT INTO `student` VALUES (10, &amp;#39;咖啡&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202010&amp;#39;, &amp;#39;20201002&amp;#39;); INSERT INTO `student` VALUES (11, &amp;#39;回顾&amp;#39;, &amp;#39;女&amp;#39;, 20, &amp;#39;202011&amp;#39;, &amp;#39;20201003&amp;#39;); INSERT INTO `student` VALUES (12, &amp;#39;同意&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202012&amp;#39;, &amp;#39;20201003&amp;#39;); INSERT INTO `student` VALUES (13, &amp;#39;规划局&amp;#39;, &amp;#39;女&amp;#39;, 20, &amp;#39;202013&amp;#39;, &amp;#39;20201003&amp;#39;); INSERT INTO `student` VALUES (14, &amp;#39;各环节&amp;#39;, &amp;#39;男&amp;#39;, 20, &amp;#39;202014&amp;#39;, &amp;#39;20201003&amp;#39;); INSERT INTO `student` VALUES (15, &amp;#39;空格&amp;#39;, &amp;#39;女&amp;#39;, 20, &amp;#39;202015&amp;#39;, &amp;#39;20201003&amp;#39;); INSERT INTO `student` VALUES (16, &amp;#39;发送到&amp;#39;, &amp;#39;男&amp;#39;, 22, &amp;#39;202016&amp;#39;, &amp;#39;20201004&amp;#39;); SET FOREIGN_KEY_CHECKS = 1; sql语句中不区分大小写</description>
    </item>
    <item>
      <title>JDK安装</title>
      <link>http://localhost:1313/post/jdk/</link>
      <pubDate>Sun, 22 Dec 2024 15:15:30 +0000</pubDate>
      <guid>http://localhost:1313/post/jdk/</guid>
      <description>JDK17和JDK1.8区别 1.8版本之前，jdk和jre是分开的，例如：1.6版本&#xA;17和21的版本是企业在用的&#xA;一、jdk目录文件解释 C:\Program Files\Java\&#xA;这是一般默认安装JDK的路径。&#xA;bin目录下都是可执行文件 D:\Javaweb\java8\jdk1.8\bin&#xA;bin下有java.exe和javac.exe&#xA;jdk/bin目录下有java.exe和javac.exe&#xA;配置环境变量的目的：任意目录下执行java程序 什么是接口 只定义行为，不做实现。&#xA;由具体的东西取实现&#xA;jdk中的jre是java运行环境&#xA;lib：java开发工具包&#xA;开发这个程序的时候，第三方其他人开发的东西。&#xA;src.zip是jdk的源码 例如：String字符串是一个类，是java提供的，这个String就是在src.zip/java/lang包下。 这个里面的String的所有的类的源码在这里。&#xA;这里indexOf方法的源码就再这里。&#xA;THIRDPARTYLICENSEREADME.txt 用于记录和展示项目中所有第三方组件及其许可证信息的重要文档。&#xA;THIRDPARTYLICENSEREADME-JAVAFX.txt 包含 JavaFX 所依赖的第三方组件及其许可证信息的文档。它确保了在分发、使用或修改 JavaFX 时，遵守所有相关的开源许可证要求。&#xA;二、环境变量配置 path是系统环境变量（windows电脑都有）&#xA;这个是系统变量中的Path 第一步：设置%javahome%/bin&#xA;这个是系统变量中的JAVA_HOME 为什么先配path中要配%javahome%/bin，再配javahome？ 第一：方便后续修改jdk目录 如果更改jdk的路径，那么直接更改%JAVA_HOME%变量的路径即可&#xA;第二：方便后续软件安装不报错 有些软件在安装的时候会先找%javahome%再找系统path中的/bin。&#xA;导致一些软件在安装的时候会失败。&#xA;执行过程？ 交给jvm，让计执行class文件，让计算机系统读懂这个程序。&#xA;环境变量配置—报错 错误：&#xA;C:\Users\anymore&amp;gt;java -version Error: could not open `E:\java-jre\lib\amd64\jvm.cfg&#39;&#xA;error:could not open &amp;hellip;jvm.cfg解决方法 - aspirant - 博客园&#xA;移动到最前面即可&#xA;运行成功</description>
    </item>
    <item>
      <title>Vue3基础</title>
      <link>http://localhost:1313/post/vue3/</link>
      <pubDate>Wed, 16 Oct 2024 23:39:00 +0000</pubDate>
      <guid>http://localhost:1313/post/vue3/</guid>
      <description>vue3基础 Vue3 (vue3js.cn)&#xA;官网：[简介 | Vue.js (vuejs.org)](https://cn. vuejs.org/guide/introduction.html)&#xA;可以使用CDN&#xA;可以用源码&#xA;使用html界面，vscode导入vue插件，简单学习vue语法&#xA;hello word ## v-html及v-text ## v-if及v-else、v-show ​```HTML &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html lang=&amp;#34;en&amp;#34;&amp;gt; &amp;lt;head&amp;gt; &amp;lt;meta charset=&amp;#34;UTF-8&amp;#34;&amp;gt; &amp;lt;meta name=&amp;#34;viewport&amp;#34; content=&amp;#34;width=device-width, initial-scale=1.0&amp;#34;&amp;gt; &amp;lt;title&amp;gt;Document&amp;lt;/title&amp;gt; &amp;lt;!-- CDN --&amp;gt; &amp;lt;script src=&amp;#34;https://unpkg.com/vue@3/dist/vue.global.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;div id=&amp;#34;app&amp;#34;&amp;gt; &amp;lt;!-- v-if 是 Vue.js 中用于条件性地渲染一块内容，内容只会在指令的表达返回true值的时候被渲染。 v-else 可用于提供条件为flase时的替代内容。 功能：当 age 的值大于 18 时，页面会显示“成年人”； 否则，显示“未成年人”。初始值设定为 18，因此会显示“未成年人” --&amp;gt; &amp;lt;!-- v-if --&amp;gt; &amp;lt;h1 v-if=&amp;#34;age &amp;gt; 18&amp;#34;&amp;gt;成年人&amp;lt;/h1&amp;gt; &amp;lt;h1 v-else&amp;gt;未成年人&amp;lt;/h1&amp;gt; &amp;lt;h1 v-show=&amp;#34;ok&amp;#34;&amp;gt;hello!&amp;lt;/h1&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;script&amp;gt; const app= { data() { return{ age:19, } } } Vue.</description>
    </item>
    <item>
      <title>auto-coder首次接触感想</title>
      <link>http://localhost:1313/post/auto-coder/</link>
      <pubDate>Sat, 21 Sep 2024 01:47:30 +0000</pubDate>
      <guid>http://localhost:1313/post/auto-coder/</guid>
      <description>看完了auto-coder的教程 打算跟着哔哩哔哩视频跟着走一遍流程熟悉基本命令。&#xA;以下是几个让我印象深刻的点： 1.能够让活跃的文件组成组——达到最佳手动效率的编程效果&#xA;2.Autom group 能让prompt和文件组成一起，下次输入prompt能够直接按照这些文件和prompt进行修改&#xA;3.直接使用auto-coder快速理解一个github的项目，非常方便&#xA;‌﻿﻿⁠⁠⁠⁠‍‌⁠‍⁠‬‌‬‬⁠‍⁠‍‍‬‍⁠‍022-🌟当你看到一个github 项目后（auto-coder.chat 最简教程） - 飞书云文档 (feishu.cn)&#xA;4.切换到自然语言模式，ctrl+k，能让命令行变成warp，用自然语言处理问题，而且能检查确认。&#xA;5.对某个文件进行@强调，对某个文件特殊强调@@，对某行代码#注释进行强调修改&#xA;6.自己开发的大模型友好库，提供大模型理解某个lib的项目解释及最简示例，方便大模型理解文档，快速利用大模型进行编程&#xA;7.人类模型模式，手动用大模型然后输出&#xA;‍‬‬﻿‍⁠⁠‬﻿‬‌﻿⁠﻿﻿‌‬﻿‌‬‍﻿⁠‬012- 让你的 terminal 秒变warp 自带自然语言交互buff - 飞书云文档 (feishu.cn)&#xA;其他：语音编程，多模态（图片）的编程，/design&#xA;文档详细，而且视频教程充足&#xA;8.byzer-llm（大模型友好库allwefantasy/llm_friendly_packages (github.com)）&#xA;byzer-llm：byzer-llm 库是 LLM 友好型库 byzer-llm 的一个示例。该项目包括允许用户快速与大型语言模型交互的功能，并提供内置的混合向量/全文搜索引擎。我们可以使用此库快速开发基于 LLM 的应用程序。&#xA;项目：&#xA;提到的：&#xA;最简RAG 10w文档以下的使用方式✓ ‌⁠⁠⁠﻿‌‬﻿‬‬﻿﻿‌﻿⁠‍‌﻿⁠⁠‍﻿‬⁠‌‬auto-coder.chat： 如何自动化开发基于大模型的应用 - 飞书云文档 (feishu.cn)&#xA;如何自动化开发基于大模型的应用（个人觉得参考即可）&#xA;哔哩哔哩视频翻译的简单demo✓&#xA;实践的时候可以参考 ‍﻿‬﻿﻿‍﻿‍⁠‌‍﻿﻿‌‬‌﻿‬015-编码实践推荐 - 飞书云文档 (feishu.cn)</description>
    </item>
    <item>
      <title>大模型应用开发总结-提示词</title>
      <link>http://localhost:1313/post/prompt/</link>
      <pubDate>Mon, 02 Sep 2024 03:27:30 +0000</pubDate>
      <guid>http://localhost:1313/post/prompt/</guid>
      <description>大模型开发总结-提示词 一、RAG技术 大模型RAG基础知识 (poolbee.top)&#xA;二、prompt编写技巧 1.使用特殊符号进行强调、分隔 结构化输出（例如：json格式，数据库语句）&#xA;作流程处理，&#xA;解决日常问题&#xA;例如：需要一个按照周一、周四排人轮次的问题&#xA;常用原则： Few-shot：给出少量示例 COT：思维链 输入：为什么我的视频播放量不高 输出： 问题陈述： 你的视频播放量不高。 ⚫ 首个为什么： 您认为是什么直接原因导致您的视频播放量没有增长？这可能包括内容的吸引力、推&#xD;广策略、目标受众的定义或其它因素。 ⚫ 第二个为什么： 您认为是什么原因导致您的视频内容缺乏吸引力？这可能涉及到内容的主题、创意&#xD;表现方式、视频质量、与观众的互动或者是时效性等方面。 ⚫ 第三个为什么： 您认为是什么原因使您的视频内容缺乏创意？这可能是由于灵感来源的局限性、创&#xD;作过程中的挑战、对目标受众喜好的理解不足，或者是您遵循的内容创作流程可能过于单一和重复。 ⚫ 第四个为什么： 您认为是什么原因导致您未能深刻理解观众的喜好？这可能是因为缺乏对观众数据&#xD;的分析、与观众互动不足、没有定期进行市场调研，或者是您的观众定位不够明确。 ⚫ 第五个为什么： 您认为是什么原因导致您的观众定位不明确？这可能是因为没有充分进行市场调研，&#xD;或者是在内容创作和发布策略中没有明确考虑到特定群体的兴趣、需求和行为特征。也可能是由于缺&#xD;乏对已有观众数据的深入分析，从而无法有效区分和理解不同观众群体。 自洽性（Self-consistency）COT： ​&#x9;利用少样本Cot采样多个不同的推理路径，并使用生成结果选择最一致的答案。多个思维链，多个回答中挑选最优解。&#xA;TOT：思维树 对于需要探索或预判的复杂任务，COT引导模型逐步思考是不足的。 示例：&#xA;# 未使用TOT&#xD;#输入&#xD;我想要为我的牙医同事开发一个大模型应用，但是我不知道要为他做个什么方面的应用，只知道他正在准备助理医师资格证考试、平时工作学习很少用电脑，请你&#xD;给我一些建议。&#xD;#输出&#xD;为你的牙医同事开发一个大模型应用是个好主意！考虑到他准备助理医师资格证考试和少用电脑的情况，以下是一些可能的应用建议：&#xD;医学知识问答助手：&#xD;开发一个能够回答医学相关问题的问答系统。可以利用大模型处理输入的医学问题，并给出详细和准确的答案，帮助他复习和理解考试内容。&#xD;医学术语解释器：&#xD;构建一个应用，可以解释医学术语和专业术语的含义。这可以帮助他更好地理解和记忆医学术语，提高学习效率。&#xD;考试模拟与反馈：&#xD;设计一个模拟考试系统，模拟助理医师资格证考试的题型和难度。系统可以根据他的答题情况给出反馈和建议，帮助他发现和弥补知识的不足。&#xD;医学文献摘要生成器：&#xD;开发一个工具，能够从医学文献中提取关键信息并生成摘要。这可以帮助他快速浏览大量的医学文献，获取必要的信息。&#xD;医学新闻和研究更新：&#xD;创建一个系统，定期从权威医学网站或数据库中获取最新的医学新闻和研究成果，并以易于理解的方式展示给他。这可以帮助他保持对行业动态的了解。&#xD;医学学习笔记整理器：&#xD;设计一个工具，能够帮助他整理和管理学习过程中的笔记和重要知识点。可以支持文本输入或语音输入，并自动整理成结构化的学习资料。&#xD;以上建议可以根据他的具体需求和使用习惯进行调整和扩展，帮助他在准备考试和日常工作学习中更高效地利用大模型技术。 # 使用TOT&#xD;# 输入&#xD;我想要为我的牙医同事开发一个大模型应用，但是我不知道要为他做个什么方面的应用，只知道他正在准备助理医师资格证考试、平时工作学习很少用电脑，请你&#xD;使用TOT框架思考后给我一些建议。 TOT 框架示例如下 --- #输入# 我想为我的妻子购买一束鲜花，但我不确定应该选择哪种鲜花。她喜欢淡雅的颜色和花香。 #输出# 思维步骤1：理解顾客的需求。 ⚫ 顾客想为妻子购买鲜花。 ⚫ 顾客的妻子喜欢淡雅的颜色和花香。 思维步骤2：考虑可能的鲜花选择。 ⚫ 候选1：百合，因为它有淡雅的颜色和花香。 ⚫ 候选2：玫瑰，选择淡粉色或白色，它们通常有花香。 ⚫ 候选3：紫罗兰，它有淡雅的颜色和花香。 ⚫ 候选4：桔梗，它的颜色淡雅但不一定有花香。 ⚫ 候选5：康乃馨，选择淡色系列，它们有淡雅的花香。 思维步骤3：根据顾客的需求筛选最佳选择。 ⚫ 百合和紫罗兰都符合顾客的需求，因为它们都有淡雅的颜色和花香。 ⚫ 淡粉色或白色的玫瑰也是一个不错的选择。 桔梗可能不是最佳选择，因为它可能没有花香。 ⚫ 康乃馨是一个可考虑的选择。 思维步骤4：给出建议。 “考虑到您妻子喜欢淡雅的颜色和花香，我建议您可以选择百合或紫罗兰。淡粉色或白色的玫瑰也是&#xD;13 一个很好的选择。希望这些建议 能帮助您做出决策！”&#xD;# 输出&#xD;输入&#xD;用户想为正在准备助理医师资格证考试的牙医同事开发一个大模型应用，但不确定该应用的具体功能。同事平时工作学习很少使用电脑。&#xD;输出&#xD;思维步骤1：理解需求和限制条件。&#xD;用户的同事正在准备助理医师资格证考试，需要辅助工具来提高学习效率。&#xD;同事平时很少使用电脑，因此应用应尽量简化操作，便于使用。&#xD;思维步骤2：考虑可能的应用功能方向。&#xD;候选1：医学知识库查询助手&#xD;应用提供语音查询功能，方便同事快速获取医学知识或考试重点内容。&#xD;候选2：智能错题本&#xD;帮助同事记录并分析考试中的错题，通过语音输入将错题记录到系统，并生成针对性练习。&#xD;候选3：考试模拟系统&#xD;提供考试模拟题库，包含历年真题和模拟题，并给出详细解析。&#xD;候选4：口腔医学案例分析助手&#xD;集成常见口腔医学案例，帮助同事学习和巩固案例分析能力，支持语音描述病例功能。&#xD;候选5：时间管理和复习计划制定工具&#xD;应用帮助同事制定个性化复习计划，结合语音提醒功能，简化操作。&#xD;思维步骤3：根据需求和限制筛选最佳应用方向。&#xD;医学知识库查询助手和智能错题本适合因其可以通过语音交互简化操作流程，尤其是错题本有助于提高学习效率。&#xD;考试模拟系统和口腔医学案例分析助手也能提供有价值的学习资源，但可能需要更多的电脑操作。&#xD;时间管理和复习计划制定工具可以帮助同事合理安排复习时间，但功能单一。&#xD;思维步骤4：给出建议。&#xD;“考虑到您的同事在准备助理医师资格证考试时很少使用电脑，建议您开发一款医学知识库查询助手或智能错题本应用。这两种应用都可以通过语音交互实现简化操作，帮助您的同事高效备考。” 我想要为我的牙医同事开发一个大模型应用，但是我不知道要为他做个什么方面的应用，只知道他正在准备助理医师资格证考试、平时工作学习很少用电脑，请你 使用TOT框架思考后给我一些建议。</description>
    </item>
    <item>
      <title>大模型微调知识实践</title>
      <link>http://localhost:1313/post/fine-tuning/</link>
      <pubDate>Sun, 01 Sep 2024 22:27:30 +0000</pubDate>
      <guid>http://localhost:1313/post/fine-tuning/</guid>
      <description>大模型微调（指令微调/有监督微调） 1.1简介 模型微调，称为指令微调（Instruction Tuning）或者有监督微调（Supervised Fine-tuning，SFT）：使用成对的输入与预期的输出，训练模型学会以问答的形式解答问题。&#xA;经过微调之后，大模型展现较强的指令遵循能力，后可以通过零样本学习的方式解决多种下游任务。&#xA;指令微调还是扮催化剂的角色，激活模型内在的潜力，而非单纯灌输信息。&#xA;1.1.1预训练对比 指令微调/有监督微调，所需数据显著减少，从十几万到上百万条，均能有效激发模型的通用任务解决能力；甚至有些少量高质量的指令数据，（数千条数万条）也能实现很好的效果。&#xD;降低了对计算资源的依赖，也提升了微调的灵活性与效率。 1.2轻量化微调技术（Lightweight Fine-tuning）参数高效微调 由于大模型的参数量巨大，进行**全量参数微调**需要消耗非常多的算力，为了解决这一问题，提出：&#xD;**参数高效微调**（**P**arameter-efficient **F**ine-tuning）/轻量化微调（**L**ightweight **F**ine-tuning）：通过训来拿极少的模型参数，也能保证微调后的模型表现可以与全量微调普美。&#xD;常用的轻量化微调技术：LoRA、Adapter和Prompt Tuning 1.3LoRA技术（不是LoRa LoRA（Low-Rank Adaptation）一种降低语言模型微调参数数量的技术&#xA;翻译是”低秩适配“的意思&#xA;通过低秩矩阵分解，在原始矩阵的基础上增加一个旁路矩阵，然后只更新旁路矩阵的参数。&#xA;LoRA paper第一页&#xA;实例： 使用简历命名实体识别的数据集，进行微调，进而开发一个AI简历助手，后能批量地自动识别并提取简历中的关键信息（姓名、教育背景、工作经历等）提升效率。&#xD;具体来说，输入一个摘录自某简历的句子，模型需要识别出所有的命名实体。实体的类别包括：姓名(NAME)国籍(CONT)、种族(RACE)、职位(TITLE)、教育背景(EDU)、专业(PRO)、组织名(ORG)、地名(LOC)。原始的数据来自于BAAI/COIG-PC-Lite · Datasets at HF Mirror (hf-mirror.com)&#xA;torch、transformer、streamlit安装&#xA;下载模型&#xA;数据处理pandas进行数据读取，转为Dataset格式&#xA;[&amp;lsquo;input&amp;rsquo;:[&amp;rsquo;#任务描述\n假设你是一个AI简历助手，能从简历中识别出所有的命名实体，并以json格式返回结果。\n\n#任务要求1n实体的类别包括：姓名、国籍、种族、职位、教育背景、专业、组织名、地名。1n返回的jso格式是一个字典，其中每个键 是实体的类别，值是一个列表，包含实体的文本。\n\n#样例小n输入：\n张三，男，中国籍，工程师1n输出：1n(&amp;ldquo;姓名&amp;rdquo;：[&amp;ldquo;张三&amp;rdquo;]，&amp;ldquo;国籍&amp;rdquo;：[&amp;ldquo;中国&amp;rdquo;]，&amp;ldquo;职位&amp;rdquo;：[&amp;ldquo;工程师&amp;rdquo;]}八n\n#当前简历\n高勇：男，中国国籍，无境外居留权，\n\n#任务重述\n请 参考样例，按照任务要求，识别出当前简历中所有的命名实体，并以jso格式返回结果。·]，&amp;lsquo;output&amp;rsquo;:[&amp;rsquo;{&amp;ldquo;姓名&amp;rdquo;：[&amp;ldquo;高勇&amp;rdquo;]，&amp;ldquo;国籍&amp;rdquo;：[&amp;ldquo;中国国籍&amp;rdquo;]}&amp;rsquo;]}&#xA;加载tokenizer&#xA;定义数据处理函数&#xA;def process_func (example): MAX_LENGTH = 384 #Llama分词器会将中文字切分为多个token因此需要放开一些最大长度，保证数据的完整性。 instruction = tokenizer (f &amp;#34;{example [&amp;#39;input&amp;#39;]} &amp;lt; sep &amp;gt;&amp;#34;) Response = tokenizer (f &amp;#34;{example [&amp;#39;output&amp;#39;]} &amp;lt; eod &amp;gt;&amp;#34;) input_ids = instruction [&amp;#34;input_ids&amp;#34;] + response [&amp;#34;input_ids&amp;#34;] attention_mask = [1] * len (input_ids) Labels = [-100] * len (instruction [&amp;#34;input_ids&amp;#34;]) + response [&amp;#34;input_ids&amp;#34;] #instruction 不计算loss if len (input_ids) &amp;gt; MAX_LENGTH: # 做一个截断 input_ids = input_ids [: MAX_LENGTH] attention_mask = attention_mask [: MAX_LENGTH] Labels = labels [: MAX_LENGTH] return { &amp;#34;input_ids&amp;#34;: input_ids, &amp;#34;attention_mask&amp;#34;: attention_mask, &amp;#34;Labels&amp;#34;: labels } 需要使用tokenizer讲文本转为id，同时讲input和output凭借，组成input_ids和attention_mask</description>
    </item>
    <item>
      <title>大模型RAG基础知识</title>
      <link>http://localhost:1313/post/rag/</link>
      <pubDate>Tue, 13 Aug 2024 19:14:39 +0000</pubDate>
      <guid>http://localhost:1313/post/rag/</guid>
      <description>什么是RAG 知识局限性：大模型的知识来源于训练数据，而这些数据主要来自于互联网上已经公开的资源，对于一些实时性的或者非公开的，由于大模型没有获取到相关数据，这部分知识也就无法被掌握。&#xA;数据安全性：为了使得大模型能够具备相应的知识，就需要将数据纳入到训练集进行训练。然而，对于企业来说，数据的安全性至关重要，任何形式的数据泄露都可能对企业构成致命的威胁。&#xA;大模型幻觉：由于大模型是基于概率统计进行构建的，其输出本质上是一系列数值运算。因此，有时会出现模型“一本正经地胡说八道”的情况，尤其是在大模型不具备的知识或不擅长的场景中。&#xA;检索增强生成（Retrieval Augmented Generation, RAG），引入外部知识，使大模型能够生成准确且符合上下文的答案，同时能够减少模型幻觉的出现。&#xA;1概览：一个完整的RAG链路 从上图可以看到，大模型接收到用户query后，RAG会先进行检索。&#xA;检索(Retrieval)：检索 Chunks 和 query 一并输入到大模型，进而回答用户的问题。&#xA;Chunks：query和离线文档经过parser和splitter（orc）向量化（或称索引）——&amp;gt;到Datebase然后和query一起进行Retrieval——&amp;gt;检索到相关的Chunks&#xA;第二次Retrieval——&amp;gt;输入query和相关的Chunks然后得到reanked的Chunks输入到LLM后得到Answer&#xA;query：在第一次Retrieval和第二次Retrieval的时候输入&#xA;为了完成检索，需要离线将文档（ppt、word、pdf等）经过解析、切割甚至OCR转写，然后进行向量化存入数据库中。 接下来，我们将分别介绍离线计算和在线计算流程。&#xA;1.1离线计算流程 文件（pdf、word、ppt等，这些 文档documents）——解析parser——&amp;gt;切割为较短的Chunk——清洗和去重。&#xA;知识库中知识的数量和质量决定了RAG的效果，因此这是非常关键且必不可少的环节。 向量化（Vectorization）：Chunk转化为向量或者 索引（Indexing）。 具体是构建**向量模型（Embedding Model）**作用是将一段 Chunk 转成 向量（Embedding）&#xA;一个好的向量模型，会使得具有相同语义的文本的向量表示在语义空间中的距离会比较近，而语义不同的文本在语义空间中的距离会比较远。 由于知识库中的所有 Chunk 都需要进行 向量化，这会使得计算量非常大，因此这一过程通常是离线完成的。&#xA;随着新知识的不断存储，向量的数量也会不断增加。这就需要将这些向量存储到 数据库 （DataBase）中进行管理，例如 Milvus 中。&#xA;离线计算总结： 离线计算就是在文档在parse&amp;amp;splitter后将得到的Chunk进行向量化（Vectorization）或称 索引（Indexing），随着向量的数量不断增加会将向量存储到Milvus等数据库中。&#xA;因为Chunk进行向量化的时候会使得计算量非常大，通常是离线进行的。&#xA;1.2在线计算 **检索（Retrieval）：**RAG系统使用时候，给定一条用户 查询（Query），从知识库中找到所需的知识的操作。 具体过程：Query会经过向量模型（Embedding Model）【是的也就是向量化】得到相应向量，然后与数据库中所有的Chunk的向量计算相似度*，得到最相近的一系列Chunk。&#xA;但 数据库 非常大的时候，向量相似度的计算过程需要一定的时间。&#xA;这时可以在索引之前那召回（Recall）：从 数据库 中快速获得大量大概率相关的 Chunk，**然后只有这些 Chunk 会参与计算向量相似度。**使得计算的复杂度就从整个知识库降到了非常低。&#xA;召回（Recall）： 召回（Recall）：通常采用简单的基于字符串的匹配算法，常用的算法有 TF-IDF，BM25 。【由于这些算法不需要任何模型，速度会非常快】&#xA;也有还是致力于实现更快的 向量检索的 ，例如 faiss，annoy **总结：**在查询（Query）前增加了召回（recall），即从数据库中快速获得大量大概率相关的Chunk，用这些大概率相关的Chunk进行计算向量相似度。达到降低计算复杂度的效果。&#xA;思维导图：向量化——query所有向量进行计算向量相似度，得到Chunk&#xA;而是在此之前增加recall进行大概率相关的Chunk计算向量相似度。</description>
    </item>
    <item>
      <title>Datawhale AI夏令营第四期大模型应用开发-Task01</title>
      <link>http://localhost:1313/post/llm/</link>
      <pubDate>Sat, 10 Aug 2024 17:06:00 +0000</pubDate>
      <guid>http://localhost:1313/post/llm/</guid>
      <description>Datawhale AI夏令营第四期大模型应用开发-Task01 首先了解一些背景知识。&#xA;一、什么是大模型 语言模型发展历史 语言模型：为了对人类语言的内在规律进行建模，研究者们提出使用语言模型（language model）来准确预测词序列中 下一个词 或者 缺失的词 的概率。&#xA;统计语言模型：使用马儿可夫假设，假设当前词与之前的词产生联系。&#xA;中文中，建立n元语言模型，n元作为最小的语义单元进行建模&#xA;神经语言模型&#xA;上下文 统计语言模型（Statistical Language Model, SLM）：使用马尔可夫假设（Markov Assumption）来建模语言序列的 𝑛 元（𝑛-gram）语言模型&#xA;神经语言模型（Neural Language Model, NLM）：基于神经网络构建语言模型，如循环神经网络（Recurrent Neural Networks, RNN），并学习上下文相关的词表示（即分布式词向量），也被称为词嵌入（Word Embedding）。代表性工作：word2vec&#xA;预训练语言模型（Pre-trained Language Model, PLM）：使用大量的无标注数据预训练双向 LSTM（Bidirectional LSTM, biLSTM）或者Transformer，然后在下游任务上进行微调（Fine-Tuning）。代表性工作：ELMo、BERT、GPT-1/2&#xA;双向lstm是在RNN基础上进行改进的模型 Transformer，使用多层自注意力结构的模型 无标注数据：数据没有任何人标注，数据自监督的方式进行学习- 形成了预训练微调的范式 大语言模型（Large Language Model, LLM）：基于“扩展法则”（Scaling Law），即通过增加模型参数或训练数据，可以提升下游任务的性能，同时具有小模型不具有的“涌现能力”（Emergent Abilities）。代表性工作：GPT-3、ChatGPT、Claude、Llama&#xA;二、大模型是怎么构建的（三个阶段） 大模型的构建过程可以分为预训练（Pretraining）、有监督微调（Supervised Fine-tuning, SFT）、基于人类反馈的强化学习对齐（Reinforcement Learning from Human Feedback, RLHF）三个阶段。&#xA;1.预训练（Pretraining） 使用海量的数据进行模型参数的初始学习，旨在为模型参数寻找到一个优质的“起点”。 (1)预训练技术的发展 ​&#x9;这一概念最初在计算机视觉领域萌芽，通过在ImageNet（一个大型图像数据集）上的训练，为模型参数奠定了坚实的基础。&#xA;​&#x9;后来在自然语言处理（NLP）领域使用，word2vec开创先河，利用未标注文本构建词嵌入模型；ELMo、BERT及GPT-1则进一步推动了**“预训练-微调”范式**的普及。&#xA;​&#x9;起初，只用于解决特定类别的下游任务；例如文本分类、序列标注、序列到序列生成等传统NLP任务。&#xA;​&#x9;之后，GPT-2——通过大规模文本数据预训练：打造能够应对广泛任务的通用解决方案，并在GPT-3中将这一理念扩展至前所未有的超大规模。&#xA;在BERT等早期预训练模型中，模型架构和训练任务呈现出多样化特征。然而，随着GPT系列模型的兴起，“解码器架构+预测下一个词”的策略证明了其卓越效能，成为了当前主流的大模型技术路线。 (2)预训练的过程 搜集和清洗文本数据 ​&#x9;首要任务是搜集和清洗海量的文本数据，确保剔除潜在的有害内容。获取高质、多元的数据集，并对其进行严谨的预处理。</description>
    </item>
    <item>
      <title>Hugo主题-Docker学习-8月8日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.08.08/</link>
      <pubDate>Wed, 07 Aug 2024 20:01:49 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.08.08/</guid>
      <description>一、迁移至腾讯云 使用Linux，而CentOs7.6不支持Node.js18所以选择了Docker创建hugo。&#xA;Docker 为什么出现? 一款产品:开发&amp;ndash;上线 两套环境！&#xA;应用环境,应用配置，开发即运维。&#xA;环境配置十分麻烦的。&#xA;（集群Redis、ES、Hadoop&amp;hellip;.），发布jar包或者war包，带上环境发布。&#xA;项目能不能带上环境安装打包？2、聊聊Docker为什么会出现_哔哩哔哩_bilibili&#xA;配置麻烦，不能够跨平台。&#xA;传统观念：开发jar，运维来做！&#xA;现在：开发打包部署上线，一套流程做完。&#xA;Docker给以上问题，提出解决方案。&#xA;类比：Java-apk-发布应用商店-使用apk即可&#xA;java-jar-打包代环境&#xA;Docker思想——容器想象为集装箱——隔离机制。&#xA;Docker的历史 2010年-美国成立的公司dotCloud做一些pass的云计算服务！lxc有关的容器技术！&#xA;他们将自己的技术（容器化技术）命名为Docker！但是没有引起行业注意！docCloud，就活不下去了。那么&#xA;就选择开源代码 2013年开源！Docker越来越多人发现了docker的优点！火了，Docker每个月都会更新一个版本！&#xA;2014年4月9日，Docker1.0发布！&#xA;为什么这么火！轻巧！&#xA;容器技术出来之前，我们都是使用的虚拟机技术！19G&#xA;虚拟机：Vmware虚拟机多台一台电脑，但笨重！&#xA;VM：linux centos原生镜像（一个电脑！）&#xD;而docker：隔离，镜像用最核心的环境4m+jdk+mysql 十分的小巧，运行镜像就好了！小巧！几个M几个kb 秒级启动！ 聊聊Docker Docker是基于Go语言开发的！开源项目！&#xA;基于官方文档学习 Docker: Accelerated Container Application Development&#xA;容器化技术：&#xA;不是模拟一个完整的操作系统。&#xA;直接用在操作系统上，充分利用操作系统的资源。&#xA;不同：&#xA;传统虚拟机，虚拟一个硬件，运行一个完整的操作系统他，在系统上安装和运行软件。 容器内的引用hi直接运行在宿主机的上的，容器是没有自己的内容的，也没有虚拟硬件。 容器相互隔离，容器都有一个数以自己的文件系统，不糊影响。 更快速的交付和部署&#xA;传统：一堆帮助文档，安装程序&#xA;Docker：打包镜像发布测试，一键运行&#xA;更便捷的升级和扩缩容&#xA;使用了Docker之后，我们部署引用就和搭积木一样！&#xA;项目打包为一个镜像，扩展——服务器A！服务器B！&#xA;更简单的系统运维&#xA;容器化之后，我们开发，测试环境都是高度一致的。&#xA;更高效的计算资源利用&#xA;Docker是内核级别的虚拟化，可以在一个物理机上运行很多的容器实例！服务器的性能能被压榨到极致。&#xA;docker run了之后发生了什么？ Docker在本机上寻找镜像——判断本机是否有这个镜像——yes——使用运行这个镜像&#xA;——no——Docker上取下载——DockerHub是否可以找到——yes——下载到这个镜像到本地&#xA;no——找不到返回错误&#xA;底层原理 Docker是怎么工作的？&#xA;Docker 是一个Client-Server结构的系统，Docker的守护进程运行在主机上，通过Socket客户端访问。&#xA;DockerServer接收到Docker-Client的指令，就会执行这个命令。&#xA;客户端命令-守护进程-产生Dokcer&#xA;Docker为什么比虚拟机快？ 1.Docker有着比虚拟机更少的抽象层&#xA;虚拟机变为了容器，直接在Docker Engine上跑</description>
    </item>
    <item>
      <title>Echart使用及常见问题</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-2/</link>
      <pubDate>Thu, 25 Jul 2024 23:50:28 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-2/</guid>
      <description>Echarts使用方法： 官方教程：https://echarts.apache.org/handbook/zh/get-started/&#xA;1.首先要提供一个容器，并给定大小 例如：&#xA;&amp;lt;div class=&amp;#34;box&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;style&amp;gt; .box{ width: 300px; height: 300px; background-color: rgb(188, 227, 236); } &amp;lt;/style&amp;gt; 2.引入需要的js地图文件，一般是而echart.js和一个地图js文件 (1)本地js文件引入 &amp;lt;script src=&amp;#34;/XXX/echarts.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;/XXX/china.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 引入即可&#xA;但echart官网已经挂了，不提供地图js文件。自行网上查阅吧~&#xA;(2)CDN引入 &amp;lt;!-- &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/echarts@latest/dist/echarts.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xD;&amp;lt;script src=&amp;#34;china.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt; 注意：如果用npm等包管理器安装过了echart，然后用webpack打包了。那么在中可以使用import语句进行引入&#xA;// import * as echarts from &amp;#39;echarts&amp;#39;; 3.实例化echarts对象 &amp;lt;div class=&amp;#34;box&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; var myChart = echarts.init(document.querySelector(&amp;#34;.box&amp;#34;)); 4.指定配置项和数据 var option = { title: { text: &amp;#39;ECharts 入门示例&amp;#39; }, tooltip: {}, legend: { data:[&amp;#39;销量&amp;#39;] }, xAxis: { data: [&amp;#34;衬衫&amp;#34;,&amp;#34;羊毛衫&amp;#34;,&amp;#34;雪纺衫&amp;#34;,&amp;#34;裤子&amp;#34;,&amp;#34;高跟鞋&amp;#34;,&amp;#34;袜子&amp;#34;] }, yAxis: {}, series: [{ name: &amp;#39;销量&amp;#39;, type: &amp;#39;bar&amp;#39;, data: [5, 20, 36, 10, 10, 20] }] }; 5.</description>
    </item>
    <item>
      <title>Hugo主题配置记录-7月26日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-1/</link>
      <pubDate>Thu, 25 Jul 2024 22:14:28 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-1/</guid>
      <description>​&#xA;这几天逛了很多博客，找到了十年之约 (foreverblog.cn)、博客广场 - 博友圈 · 博客人的朋友圈！ (boyouquan.com)等博客交流圈子，等我慢慢写博客，然后域名备案下来了，提交申请吧~ 一、新增博客背景虚化图片 ​&#x9;这个很简单，在assets\scss\custom.scss中对body选择器声明块中增加，背景图片即可。&#xA;如果要点击暗色模式的时候，切换背景虚化的颜色。那么需要在为暗色模式的click事件中增加背景虚化的类。&#xA;\主题文件夹\public\ts\main.ts中&#xA;首先在CSS: 使用 .dark-mode 类在暗色模式下应用黑色毛玻璃效果。&#xA;body { background-image: url(&amp;#39;/page/nav-img/background4.jpg&amp;#39;); background-size: cover; background-attachment: fixed; position: relative; transition: background-color 0.3s ease; } body::after { content: &amp;#39;&amp;#39;; position: absolute; top: 0; left: 0; right: 0; bottom: 0; /* 白色模式下的样式 */ background: rgba(176, 176, 176, 0.595); /* 黑色半透明 */ backdrop-filter: blur(10px); /* 毛玻璃效果 */ z-index: -1; // transition: background 0.3s ease, backdrop-filter 0.</description>
    </item>
    <item>
      <title>Hugo主题配置记录-7月23日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.23/</link>
      <pubDate>Mon, 22 Jul 2024 15:41:48 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.23/</guid>
      <description>解决了一些小问题，之前建站留下的小问题&#xA;一、左侧栏的正确跳转 点击图标后跳转到链接栏中有二维码&#xA;config.yaml中修改跳转链接到/post/link即可&#xA;点击&amp;quot;链接&amp;quot;后出现二维码&#xA;二、文章图片的正确插入 1.文章封面图片 \content\post中的文章 ##Front Matter图片插入记得要添加/post/路径 例如： image: /post/123.png&#xA;--- title: 文章标题 date: 2024-07-23 10:00:00 tags: - 标签1 - 标签2 categories: - 分类1 - 分类2 #这里的就是文章封面图片 image: /post/stack-logo-128.png --- 这里注意\content\page\中的文章&#xA;在文章内部的时候，&#xA;![图片](123.jpg)不需要添加/post/路径&#xA;2.文章内部图片 \content\post\中需要添加多个图片&#xA;可以放入文件夹中，避免多个md文件和多个图片堆在一起。【注意：可以不写明在哪个文件夹，直接写/post/文件名即可】&#xA;例如：![image-20240607184445492](/post/123.png)&#xA;![image-20240607184336146](/post/文件夹/123.png)这样详细写明最好，实现图片的插入。&#xA;其实在/post目录中用/post/123.png这样的方式，会自动搜寻/post目录下的123.png文件，（自我理解）所以不用写明中间的/before文件夹。&#xA;最后：&#xA;Front Matter中的links项的路径也一样需要加post，从post路径开始必须指定路径清晰到文件 links: \- title: Bilibili description: bilibili是国内知名的视频弹幕网站,这里有及时的动漫新番,活跃的ACG氛围,有创意的Up主。大家可以在这里找到许多欢乐。 website: https://www.bilibili.com/ image: /post/logo/Bilibili_Logo_Blue.svg </description>
    </item>
    <item>
      <title>Hugo主题配置记录-7月21日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.21/</link>
      <pubDate>Sat, 20 Jul 2024 20:01:49 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.21/</guid>
      <description>Hugo主题配置记录 1.引入busuanzi插件进行字数、访问量统计。 \layouts\partials\footer&#xA;footer文件中&#xA;增加以下代码&#xA;&amp;lt;!-- 卜算子统计信息 --&amp;gt; &amp;lt;section class=&amp;#34;count_info&amp;#34;&amp;gt; &amp;lt;!-- 1运行时间 --&amp;gt; &amp;lt;div&amp;gt; {{ T &amp;#34;footer.runtime1&amp;#34; }} &amp;lt;span id=&amp;#34;ds&amp;#34; class=&amp;#34;running-days&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; {{ T &amp;#34;footer.runtime2&amp;#34; }} &amp;lt;span id=&amp;#34;hs&amp;#34; class=&amp;#34;running-days&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; {{ T &amp;#34;footer.runtime3&amp;#34; }} &amp;lt;span id=&amp;#34;ms&amp;#34; class=&amp;#34;running-days&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; {{ T &amp;#34;footer.runtime4&amp;#34; }} &amp;lt;/div&amp;gt; &amp;lt;!-- 2文章个数和字数 --&amp;gt; &amp;lt;div&amp;gt; {{ $scratch := newScratch }} {{ range (where .Site.Pages &amp;#34;Kind&amp;#34; &amp;#34;page&amp;#34;) }} {{ $scratch.Add &amp;#34;total&amp;#34; .WordCount }} {{ end }} &amp;lt;!-- 转换为整数 --&amp;gt; {{ $total := $scratch.</description>
    </item>
    <item>
      <title>随笔</title>
      <link>http://localhost:1313/post/%E9%9A%8F%E7%AC%94/</link>
      <pubDate>Fri, 19 Jul 2024 21:14:39 +0000</pubDate>
      <guid>http://localhost:1313/post/%E9%9A%8F%E7%AC%94/</guid>
      <description>Hugo主题配置记录&#xA;建站回顾 1. 域名 正在ICP备案,预计7个工作日后能拿到备案的域名。慢慢来吧1111&#xA;2. 服务器 腾讯云服务器，40G, 1M带宽，1核2G内存。&#xA;3. 博客框架 暂时用的Hugo，建站很快。&#xA;历程 框架选来选去，之前用过Hexo主题,但是时间过于久远。这次想在云服务器上运行，遂重新开始。框架从Hexo到Halo到Hugo。 原本在Linux上安装Hexo得心应手，但这次在CentOS7.6并不支持Nodejs8,支持不了最新的Hexo主题,又转为Halo， Halo苦于教程少啊,而且Hugo整体还是很方便,比较下来Hexo的教程&amp;gt;Hugo&amp;gt;Halo，最终确定了Hugo框架。 现在网站搭起来了，后续慢慢再更新文章~~。 </description>
    </item>
    <item>
      <title>Stable Diffusion笔记</title>
      <link>http://localhost:1313/post/sd/</link>
      <pubDate>Sun, 09 Jun 2024 11:54:39 +0000</pubDate>
      <guid>http://localhost:1313/post/sd/</guid>
      <description>check point 就是菜单——选择不同的模型&#xA;lora更精确的人物或画风，更可控&#xA;图生图&#xA;上传&#xA;描述图片&#xA;AI摄影&#xA;lora炼丹&#xA;七天免费试用领取&#xA;聚焦剪裁、中央剪裁、无需剪裁、&#xA;使用deepbooru算法反推标注。0.6 系数越小越精细&#xA;日志看loss值，数值降低大概率没什么问题&#xA;一、提示词prompt 类别&#xA;其他提示词：画质等&#xA;但是真实系的操作是更依赖真实的模型&#xA;1.prompt模板: 具体的直接使用即可 2.提示词权重分配 增强减弱(){}&#x9;[] 安全范围1+-0.5，单个的&#xA;():1.1倍，1.331倍&#xA;{}&#xA;[1]进阶语法-坑 不想出现就是负向提示词 单色风格的画作&#xA;3.采样迭代步数 加噪点——去除噪点&#xA;闪一次，就步数&amp;gt;20后意义不大&#xA;最低不要低于10&#xA;采样方法 带有++号的是改进的算法，最好使用比较稳定。&#xA;分辨率过高容易出现多人，多手。&#xA;一般低分辨率绘制，然后hires fix 来放大 高清修复、 面部修复、平铺/分块：生成无缝贴满整个屏幕的纹理性图片的；一般不用&#xA;7-12相关性一般&#xA;批次和数量&#xA;批次是格子预览图。每次批次数量不宜过高，容易爆显存。&#xA;4.写提示词方法 1.翻译、描述确切场景，然后直接让词组翻译为英文 2.功能插件、翻译的插件——国内有——SD也有 3.更好书写提示词网站：AI词汇加速器 提示词网站：&#xA;二次元和亚洲面孔多：&#xA;人物、&#xA;画风、质感：&#xA;二、图生图 原理：原本提醒上记录的像素信息会在加噪和去噪的过程中、被作为一种特征反应到生成的图片上。&#xA;1.上传图片、导入到SD里 2.提示词书写 1man,1girl&#xA;3.参数设置 重绘幅度0.6-0.8&#xA;分辨率设置，原始尺寸一样最好&#xA;按长宽比例一致生成、&#xA;[1]随机种子 xxx in backgroud&#xA;景深depth of field&#xA;如果要保留生成的原本的元素的样子，只改动背景，不改动人物风格呢？ 同一个随机种子、同一套随机种子、 骰子：-1是随机，循环按钮是上一次的种子。</description>
    </item>
    <item>
      <title>OpenCV中对图像噪声处理的常用形态学操作</title>
      <link>http://localhost:1313/post/opencv/</link>
      <pubDate>Mon, 06 Nov 2023 21:14:39 +0000</pubDate>
      <guid>http://localhost:1313/post/opencv/</guid>
      <description>Typlog 的相册语法 介绍了图像处理中的形态学操作，以及如何使用OpenCV库来执行这些操作。括腐蚀、膨胀、开运算、闭运算、梯度运算、顶帽运算和黑帽运算。每种操作都有不同的效果和应用。&#xA;一、噪声处理的基本操作 1.腐蚀 让图像沿着自己边界向内收缩，OpenCV通过核（kernel）来实现收缩计算。&#xA;在形态学中，可以理解为由N个像素组成的像素块，（每一个像素块，包含一个核（kernel））在图像的边缘移动，移动的过程中，核将会在图像的边缘抹除图像和核（kernel）重合但又没有越过核心（kernel）的像素点抹除。&#xD;例子一、消除仙人掌的刺 import cv2 import numpy as np img =cv2.imread(r&amp;#34;D:\Program Files (x86)\PyCharmProject\pythonProject\video-face\xtz.png&amp;#34;) k=np.ones((3,3),np.uint8)#3*3矩阵定义核的大小 cv2.imshow( &amp;#34;img&amp;#34;,img) dst=cv2.erode(img,k)#腐蚀 cv2.imshow(&amp;#34;dst&amp;#34;,dst) cv2.waitKey() cv2.destroyAllwindows( ) dst=cv2.erode(src,kernel,anchor,iterations,borderType,borderValue) 参数说明: src原始图像 kernel腐蚀使用的核 anchor可选参数 核的锚点位置 iterations可选参数 腐蚀操作的迭代次数，默认值为1，后面两个参数建议采用默认&#xA;2.膨胀 膨胀操作与腐蚀操作相反，膨胀操作可以让图像沿着自己的边界向内扩张。&#xD;同样是通过核来计，当核在图像的边缘移动时，核会将图像边缘填补新的像素&#xD;import cv2 import numpy as np img=cv2.imread(r&amp;#34;D:\Program Files (x86)\PyCharmProject\pythonProject\video-face\xtz.png&amp;#34;) k=np.ones((9,9),np.uint8) cv2.imshow( &amp;#34;img&amp;#34;,img) dst=cv2.dilate(img, k) cv2.imshow( &amp;#34;dst&amp;#34;,dst) cv2.waitKey() cv2.destroyAllwindows() ​```Python dst=cv2.dilate(src,kernel,anchor,iterations,borderType,borderValue)\ 参数说明如下&#xA;src原始图像 kernel膨胀使用的核 anchor可选参数核的锚点位置 iterations可选参数膨胀操作的迭代次数 后面两个为可选参数建议取默认值&#xA;膨胀可以产生一种“近视眼”的效果。&#xA;3.开运算 开运算是将图像先进行腐蚀操作，再进行膨胀操作。&#xD;开运算可以用来抹除图像外部的细节。&#xA;#开运算 import cv2 import numpy as np img=cv2.</description>
    </item>
    <item>
      <title>流操作和函数式编程</title>
      <link>http://localhost:1313/post/java/</link>
      <pubDate>Tue, 28 Mar 2023 11:08:00 +0000</pubDate>
      <guid>http://localhost:1313/post/java/</guid>
      <description>流操作 是Java 8中引入的一种数据处理模式，通常涉及数据的读取、写入、转换、过滤等，这些操作可以在数据流上连续进行，形成一条处理链。&#xA;例如：stream() 方法是 Java 8 引入的 Stream API 的一部分，它用于将集合（如数组、列表等）转换为流（Stream）。&#xA;例如：能用max()和min()对流操作找到流中的最大元素。&#xA;[参数:可用Comparator接口自定义比较的逻辑]&#xA;import java.util.Arrays; import java.util.Optional; import java.util.Comparator; public class StreamExample { public static void main(String[] args) { Integer[] numbers = {3, 1, 4, 1, 5, 9, 2, 6, 5}; // 使用默认比较器找到最大元素 Optional&amp;lt;Integer&amp;gt; max = Arrays.stream(numbers).max(); max.ifPresent(System.out::println); // 输出：9 // 使用默认比较器找到最小元素 Optional&amp;lt;Integer&amp;gt; min = Arrays.stream(numbers).min(); min.ifPresent(System.out::println); // 输出：1 // 使用自定义比较器找到最大元素（基于绝对值） Optional&amp;lt;Integer&amp;gt; maxAbs = Arrays.stream(numbers).max(Comparator.comparingInt(Math::abs)); maxAbs.ifPresent(System.out::println); // 输出：9 或 -5取决于绝对值的比较 } } 其中Optional</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/post/%E4%BA%A7%E5%93%81%E4%BA%A4%E6%B5%81/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E4%BA%A7%E5%93%81%E4%BA%A4%E6%B5%81/</guid>
      <description>产品上把大模型的缺点规避掉了 错误生成有错误了，参考的文档中设置答案。&#xA;准确性患者的问题，&#xA;上传题库—生成的内容是虚假的（向量数据库进行检索）——具体的prompt生&#xA;最小demo实现！ 个人知识库——关键字——对比——&#xA;爱好语音输入？文盲，只会说不会写&#xA;文字 视频长、大、处理有瓶颈&#xA;chatGLM抽取关键词和词频&#xA;分析在线/离线视屏解析，文字转写，&#xA;在线直播&#xA;不断递归式的抽摘要。&#xA;十条结果，然后展示，&#xA;视屏——文字——关键词+词云图&#xA;多模态、想法很重要。&#xA;调研优秀项目和协调个人想法。&#xA;功能多，产品形态上。&#xA;大视频，文本解析的好的方案？&#xA;1.whisper&#xA;2.加速方案&#xA;七分钟用的2080ti显卡，30s解析。&#xA;会议视屏长，直播撰写，实时的转写——提升撰写的效果。&#xA;最小demo实现！！ 核心思路：先堆免费有资源的能力、再做更多稳定性和UI的考虑&#xA;一定是一个输入输出的结果。&#xA;目前掌握：&#xA;task1：智能编程助手&#xA;问答最小demo&#xA;task3：AI科研助手&#xA;上传PDF——解析PDF——拼接摘要Prompt—到大模型—输出给用户：&#xA;根据提问——Embedding和Faiss检索chunks——用户请求拼接Prompt—到大模型—结构输出给用户&#xA;客户端接收到用户上传的PDF后，发送到服务端。服务端首先完成PDF内容解析，然后拼接摘要Prompt并输入源大模型，得到模型输出结果后，返回给客户端并展示给用户。&#xA;如果用户接下来进行提问，客户端将用户请求发送到服务端，服务端进行Embedding和Faiss检索，然后将检索到的chunks与用户请求拼接成Prompt并输入到源大模型，得到模型输出结果后，返回给客户端进行结构化，然后展示给用户。&#xA;关键词提取 从论文中提取关键概念和术语，帮助用户快速了解研究重点。 x月x日 论文对比 比较两篇或者多篇论文的内容，总结他们之间的异同点。 x月x日 相关工作推荐 根据用户的兴趣领域推荐相关的最新研究成果。 x月x日 扩展功能： 1.视屏录像摘要，词云图——实时视屏摘要助手&#xA;2.导入的文档作为题目，给出正确选项——刷题助手？&#xA;3.&#xA;想法： Joe-2002/LinChance_GPT: 本项目致力于打造数智化平台级智能人机交互产品，结合智能知识库和知识检索的功能，满足高效运行和优质服务的需求。 (github.com)&#xA;算法含量也很高&#xA;使用lora微调&#xA;交互逻辑&#xA;语言模型——十万个为什么——（实体gai）段文本少儿科普内容——打印卡片——版权ying&#xA;剧情卡片，多张卡片交互，组合几何级数的。语言模型能为。&#xA;传统早教机不可能为每种卡片设置不同的台词——补全每种组合的信息，产生创意性的句子进行学习&#xA;实体玩具的识别，注册实体玩具的识别，任意。&#xA;版权方面，实体玩具，古生物不容易被拍摄到的。&#xA;键盘版的demo&#xA;旋转位移放缩，泛化能力&#xA;A-B的映射&#xA;传统计算机映射——学生掌握的很好。&#xA;更强的迁移学习的能力，以前是数据标注&#xA;计算机及图形学，NeRF神经辐射场&#xA;社会不是随机的，按劳分配&#xA;Anki卡片制作，艾宾浩斯遗忘曲线，单词&#xA;数据分布在二维三维的空间上，&#xA;正样本和负样本，线性，&#xA;数据是高维空间的数据流行</description>
    </item>
    <item>
      <title></title>
      <link>http://localhost:1313/post/%E5%90%B4%E6%81%A9%E8%BE%BE%E7%9A%84%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0%E9%AA%86%E9%A9%BC%E5%85%88%E7%9F%A5/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%90%B4%E6%81%A9%E8%BE%BE%E7%9A%84%E8%AF%BE%E7%A8%8B%E5%AD%A6%E4%B9%A0%E9%AA%86%E9%A9%BC%E5%85%88%E7%9F%A5/</guid>
      <description>1.大模型应用开发——Datawhale&#xA;2.吴恩达的课程学习——骆驼先知LC1332/Prophet-Andrew-Ng: 李鲁鲁老师对 吴恩达《ChatGPT Prompt Engineering for Developers》课程中文版的实践 (github.com)&#xA;【骆驼读论文】关于Andrew Ng的prompt工程课程的实践，为GPT编写更准确而多样的提示词 - 知乎 (zhihu.com)&#xA;3.大模型应用开发——简单应用&#xA;可以用到骆驼这个开源的模型，进行embadding处理。&#xA;Luotuo-Text-Embedding/report.md at main · LC1332/Luotuo-Text-Embedding (github.com)</description>
    </item>
  </channel>
</rss>
