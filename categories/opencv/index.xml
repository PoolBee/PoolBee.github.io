<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>OpenCV on PoolBee的博客</title>
    <link>http://localhost:1313/categories/opencv/</link>
    <description>Recent content in OpenCV on PoolBee的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Mon, 06 Nov 2023 21:14:39 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/opencv/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>OpenCV中对图像噪声处理的常用形态学操作</title>
      <link>http://localhost:1313/post1/opencv/</link>
      <pubDate>Mon, 06 Nov 2023 21:14:39 +0000</pubDate>
      <guid>http://localhost:1313/post1/opencv/</guid>
      <description>Typlog 的相册语法 介绍了图像处理中的形态学操作，以及如何使用OpenCV库来执行这些操作。括腐蚀、膨胀、开运算、闭运算、梯度运算、顶帽运算和黑帽运算。每种操作都有不同的效果和应用。&#xA;一、噪声处理的基本操作 1.腐蚀 让图像沿着自己边界向内收缩，OpenCV通过核（kernel）来实现收缩计算。&#xA;在形态学中，可以理解为由N个像素组成的像素块，（每一个像素块，包含一个核（kernel））在图像的边缘移动，移动的过程中，核将会在图像的边缘抹除图像和核（kernel）重合但又没有越过核心（kernel）的像素点抹除。&#xD;例子一、消除仙人掌的刺 import cv2 import numpy as np img =cv2.imread(r&amp;#34;D:\Program Files (x86)\PyCharmProject\pythonProject\video-face\xtz.png&amp;#34;) k=np.ones((3,3),np.uint8)#3*3矩阵定义核的大小 cv2.imshow( &amp;#34;img&amp;#34;,img) dst=cv2.erode(img,k)#腐蚀 cv2.imshow(&amp;#34;dst&amp;#34;,dst) cv2.waitKey() cv2.destroyAllwindows( ) dst=cv2.erode(src,kernel,anchor,iterations,borderType,borderValue) 参数说明: src原始图像 kernel腐蚀使用的核 anchor可选参数 核的锚点位置 iterations可选参数 腐蚀操作的迭代次数，默认值为1，后面两个参数建议采用默认&#xA;2.膨胀 膨胀操作与腐蚀操作相反，膨胀操作可以让图像沿着自己的边界向内扩张。&#xD;同样是通过核来计，当核在图像的边缘移动时，核会将图像边缘填补新的像素&#xD;import cv2 import numpy as np img=cv2.imread(r&amp;#34;D:\Program Files (x86)\PyCharmProject\pythonProject\video-face\xtz.png&amp;#34;) k=np.ones((9,9),np.uint8) cv2.imshow( &amp;#34;img&amp;#34;,img) dst=cv2.dilate(img, k) cv2.imshow( &amp;#34;dst&amp;#34;,dst) cv2.waitKey() cv2.destroyAllwindows() ```Python dst=cv2.dilate(src,kernel,anchor,iterations,borderType,borderValue)\ 参数说明如下&#xA;src原始图像 kernel膨胀使用的核 anchor可选参数核的锚点位置 iterations可选参数膨胀操作的迭代次数 后面两个为可选参数建议取默认值&#xA;膨胀可以产生一种“近视眼”的效果。&#xA;3.开运算 开运算是将图像先进行腐蚀操作，再进行膨胀操作。&#xD;开运算可以用来抹除图像外部的细节。&#xA;#开运算 import cv2 import numpy as np img=cv2.</description>
    </item>
    <item>
      <title>OpenCV中对图像噪声处理的常用形态学操作</title>
      <link>http://localhost:1313/post/opencv/</link>
      <pubDate>Mon, 06 Nov 2023 21:14:39 +0000</pubDate>
      <guid>http://localhost:1313/post/opencv/</guid>
      <description>Typlog 的相册语法 介绍了图像处理中的形态学操作，以及如何使用OpenCV库来执行这些操作。括腐蚀、膨胀、开运算、闭运算、梯度运算、顶帽运算和黑帽运算。每种操作都有不同的效果和应用。&#xA;一、噪声处理的基本操作 1.腐蚀 让图像沿着自己边界向内收缩，OpenCV通过核（kernel）来实现收缩计算。&#xA;在形态学中，可以理解为由N个像素组成的像素块，（每一个像素块，包含一个核（kernel））在图像的边缘移动，移动的过程中，核将会在图像的边缘抹除图像和核（kernel）重合但又没有越过核心（kernel）的像素点抹除。&#xD;例子一、消除仙人掌的刺 import cv2 import numpy as np img =cv2.imread(r&amp;#34;D:\Program Files (x86)\PyCharmProject\pythonProject\video-face\xtz.png&amp;#34;) k=np.ones((3,3),np.uint8)#3*3矩阵定义核的大小 cv2.imshow( &amp;#34;img&amp;#34;,img) dst=cv2.erode(img,k)#腐蚀 cv2.imshow(&amp;#34;dst&amp;#34;,dst) cv2.waitKey() cv2.destroyAllwindows( ) dst=cv2.erode(src,kernel,anchor,iterations,borderType,borderValue) 参数说明: src原始图像 kernel腐蚀使用的核 anchor可选参数 核的锚点位置 iterations可选参数 腐蚀操作的迭代次数，默认值为1，后面两个参数建议采用默认&#xA;2.膨胀 膨胀操作与腐蚀操作相反，膨胀操作可以让图像沿着自己的边界向内扩张。&#xD;同样是通过核来计，当核在图像的边缘移动时，核会将图像边缘填补新的像素&#xD;import cv2 import numpy as np img=cv2.imread(r&amp;#34;D:\Program Files (x86)\PyCharmProject\pythonProject\video-face\xtz.png&amp;#34;) k=np.ones((9,9),np.uint8) cv2.imshow( &amp;#34;img&amp;#34;,img) dst=cv2.dilate(img, k) cv2.imshow( &amp;#34;dst&amp;#34;,dst) cv2.waitKey() cv2.destroyAllwindows() ​```Python dst=cv2.dilate(src,kernel,anchor,iterations,borderType,borderValue)\ 参数说明如下&#xA;src原始图像 kernel膨胀使用的核 anchor可选参数核的锚点位置 iterations可选参数膨胀操作的迭代次数 后面两个为可选参数建议取默认值&#xA;膨胀可以产生一种“近视眼”的效果。&#xA;3.开运算 开运算是将图像先进行腐蚀操作，再进行膨胀操作。&#xD;开运算可以用来抹除图像外部的细节。&#xA;#开运算 import cv2 import numpy as np img=cv2.</description>
    </item>
  </channel>
</rss>
