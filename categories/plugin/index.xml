<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Plugin on PoolBee的博客</title>
    <link>http://localhost:1313/categories/plugin/</link>
    <description>Recent content in Plugin on PoolBee的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Sat, 21 Sep 2024 01:47:30 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/plugin/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>auto-coder首次接触感想</title>
      <link>http://localhost:1313/post/auto-coder/</link>
      <pubDate>Sat, 21 Sep 2024 01:47:30 +0000</pubDate>
      <guid>http://localhost:1313/post/auto-coder/</guid>
      <description>看完了auto-coder的教程 打算跟着哔哩哔哩视频跟着走一遍流程熟悉基本命令。&#xA;以下是几个让我印象深刻的点： 1.能够让活跃的文件组成组——达到最佳手动效率的编程效果&#xA;2.Autom group 能让prompt和文件组成一起，下次输入prompt能够直接按照这些文件和prompt进行修改&#xA;3.直接使用auto-coder快速理解一个github的项目，非常方便&#xA;‌﻿﻿⁠⁠⁠⁠‍‌⁠‍⁠‬‌‬‬⁠‍⁠‍‍‬‍⁠‍022-🌟当你看到一个github 项目后（auto-coder.chat 最简教程） - 飞书云文档 (feishu.cn)&#xA;4.切换到自然语言模式，ctrl+k，能让命令行变成warp，用自然语言处理问题，而且能检查确认。&#xA;5.对某个文件进行@强调，对某个文件特殊强调@@，对某行代码#注释进行强调修改&#xA;6.自己开发的大模型友好库，提供大模型理解某个lib的项目解释及最简示例，方便大模型理解文档，快速利用大模型进行编程&#xA;7.人类模型模式，手动用大模型然后输出&#xA;‍‬‬﻿‍⁠⁠‬﻿‬‌﻿⁠﻿﻿‌‬﻿‌‬‍﻿⁠‬012- 让你的 terminal 秒变warp 自带自然语言交互buff - 飞书云文档 (feishu.cn)&#xA;其他：语音编程，多模态（图片）的编程，/design&#xA;文档详细，而且视频教程充足&#xA;8.byzer-llm（大模型友好库allwefantasy/llm_friendly_packages (github.com)）&#xA;byzer-llm：byzer-llm 库是 LLM 友好型库 byzer-llm 的一个示例。该项目包括允许用户快速与大型语言模型交互的功能，并提供内置的混合向量/全文搜索引擎。我们可以使用此库快速开发基于 LLM 的应用程序。&#xA;项目：&#xA;提到的：&#xA;最简RAG 10w文档以下的使用方式✓ ‌⁠⁠⁠﻿‌‬﻿‬‬﻿﻿‌﻿⁠‍‌﻿⁠⁠‍﻿‬⁠‌‬auto-coder.chat： 如何自动化开发基于大模型的应用 - 飞书云文档 (feishu.cn)&#xA;如何自动化开发基于大模型的应用（个人觉得参考即可）&#xA;哔哩哔哩视频翻译的简单demo✓&#xA;实践的时候可以参考 ‍﻿‬﻿﻿‍﻿‍⁠‌‍﻿﻿‌‬‌﻿‬015-编码实践推荐 - 飞书云文档 (feishu.cn)</description>
    </item>
    <item>
      <title>Echart使用及常见问题</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-2/</link>
      <pubDate>Thu, 25 Jul 2024 23:50:28 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-2/</guid>
      <description>Echarts使用方法： 官方教程：https://echarts.apache.org/handbook/zh/get-started/&#xA;1.首先要提供一个容器，并给定大小 例如：&#xA;&amp;lt;div class=&amp;#34;box&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; &amp;lt;style&amp;gt; .box{ width: 300px; height: 300px; background-color: rgb(188, 227, 236); } &amp;lt;/style&amp;gt; 2.引入需要的js地图文件，一般是而echart.js和一个地图js文件 (1)本地js文件引入 &amp;lt;script src=&amp;#34;/XXX/echarts.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; &amp;lt;script src=&amp;#34;/XXX/china.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; 引入即可&#xA;但echart官网已经挂了，不提供地图js文件。自行网上查阅吧~&#xA;(2)CDN引入 &amp;lt;!-- &amp;lt;script src=&amp;#34;https://cdn.jsdelivr.net/npm/echarts@latest/dist/echarts.min.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt;&#xD;&amp;lt;script src=&amp;#34;china.js&amp;#34;&amp;gt;&amp;lt;/script&amp;gt; --&amp;gt; 注意：如果用npm等包管理器安装过了echart，然后用webpack打包了。那么在中可以使用import语句进行引入&#xA;// import * as echarts from &amp;#39;echarts&amp;#39;; 3.实例化echarts对象 &amp;lt;div class=&amp;#34;box&amp;#34;&amp;gt;&amp;lt;/div&amp;gt; var myChart = echarts.init(document.querySelector(&amp;#34;.box&amp;#34;)); 4.指定配置项和数据 var option = { title: { text: &amp;#39;ECharts 入门示例&amp;#39; }, tooltip: {}, legend: { data:[&amp;#39;销量&amp;#39;] }, xAxis: { data: [&amp;#34;衬衫&amp;#34;,&amp;#34;羊毛衫&amp;#34;,&amp;#34;雪纺衫&amp;#34;,&amp;#34;裤子&amp;#34;,&amp;#34;高跟鞋&amp;#34;,&amp;#34;袜子&amp;#34;] }, yAxis: {}, series: [{ name: &amp;#39;销量&amp;#39;, type: &amp;#39;bar&amp;#39;, data: [5, 20, 36, 10, 10, 20] }] }; 5.</description>
    </item>
  </channel>
</rss>
