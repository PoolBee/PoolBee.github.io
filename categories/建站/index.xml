<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>建站 on PoolBee的博客</title>
    <link>http://localhost:1313/categories/%E5%BB%BA%E7%AB%99/</link>
    <description>Recent content in 建站 on PoolBee的博客</description>
    <generator>Hugo</generator>
    <language>zh-cn</language>
    <lastBuildDate>Wed, 07 Aug 2024 20:01:49 +0000</lastBuildDate>
    <atom:link href="http://localhost:1313/categories/%E5%BB%BA%E7%AB%99/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Hugo主题-Docker学习-8月8日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.08.08/</link>
      <pubDate>Wed, 07 Aug 2024 20:01:49 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.08.08/</guid>
      <description>一、迁移至腾讯云 使用Linux，而CentOs7.6不支持Node.js18所以选择了Docker创建hugo。&#xA;Docker 为什么出现? 一款产品:开发&amp;ndash;上线 两套环境！&#xA;应用环境,应用配置，开发即运维。&#xA;环境配置十分麻烦的。&#xA;（集群Redis、ES、Hadoop&amp;hellip;.），发布jar包或者war包，带上环境发布。&#xA;项目能不能带上环境安装打包？2、聊聊Docker为什么会出现_哔哩哔哩_bilibili&#xA;配置麻烦，不能够跨平台。&#xA;传统观念：开发jar，运维来做！&#xA;现在：开发打包部署上线，一套流程做完。&#xA;Docker给以上问题，提出解决方案。&#xA;类比：Java-apk-发布应用商店-使用apk即可&#xA;java-jar-打包代环境&#xA;Docker思想——容器想象为集装箱——隔离机制。&#xA;Docker的历史 2010年-美国成立的公司dotCloud做一些pass的云计算服务！lxc有关的容器技术！&#xA;他们将自己的技术（容器化技术）命名为Docker！但是没有引起行业注意！docCloud，就活不下去了。那么&#xA;就选择开源代码 2013年开源！Docker越来越多人发现了docker的优点！火了，Docker每个月都会更新一个版本！&#xA;2014年4月9日，Docker1.0发布！&#xA;为什么这么火！轻巧！&#xA;容器技术出来之前，我们都是使用的虚拟机技术！19G&#xA;虚拟机：Vmware虚拟机多台一台电脑，但笨重！&#xA;VM：linux centos原生镜像（一个电脑！）&#xD;而docker：隔离，镜像用最核心的环境4m+jdk+mysql 十分的小巧，运行镜像就好了！小巧！几个M几个kb 秒级启动！ 聊聊Docker Docker是基于Go语言开发的！开源项目！&#xA;基于官方文档学习 Docker: Accelerated Container Application Development&#xA;容器化技术：&#xA;不是模拟一个完整的操作系统。&#xA;直接用在操作系统上，充分利用操作系统的资源。&#xA;不同：&#xA;传统虚拟机，虚拟一个硬件，运行一个完整的操作系统他，在系统上安装和运行软件。 容器内的引用hi直接运行在宿主机的上的，容器是没有自己的内容的，也没有虚拟硬件。 容器相互隔离，容器都有一个数以自己的文件系统，不糊影响。 更快速的交付和部署&#xA;传统：一堆帮助文档，安装程序&#xA;Docker：打包镜像发布测试，一键运行&#xA;更便捷的升级和扩缩容&#xA;使用了Docker之后，我们部署引用就和搭积木一样！&#xA;项目打包为一个镜像，扩展——服务器A！服务器B！&#xA;更简单的系统运维&#xA;容器化之后，我们开发，测试环境都是高度一致的。&#xA;更高效的计算资源利用&#xA;Docker是内核级别的虚拟化，可以在一个物理机上运行很多的容器实例！服务器的性能能被压榨到极致。&#xA;docker run了之后发生了什么？ Docker在本机上寻找镜像——判断本机是否有这个镜像——yes——使用运行这个镜像&#xA;——no——Docker上取下载——DockerHub是否可以找到——yes——下载到这个镜像到本地&#xA;no——找不到返回错误&#xA;底层原理 Docker是怎么工作的？&#xA;Docker 是一个Client-Server结构的系统，Docker的守护进程运行在主机上，通过Socket客户端访问。&#xA;DockerServer接收到Docker-Client的指令，就会执行这个命令。&#xA;客户端命令-守护进程-产生Dokcer&#xA;Docker为什么比虚拟机快？ 1.Docker有着比虚拟机更少的抽象层&#xA;虚拟机变为了容器，直接在Docker Engine上跑</description>
    </item>
    <item>
      <title>Hugo主题配置记录-7月26日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-1/</link>
      <pubDate>Thu, 25 Jul 2024 22:14:28 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.26-1/</guid>
      <description>​&#xA;这几天逛了很多博客，找到了十年之约 (foreverblog.cn)、博客广场 - 博友圈 · 博客人的朋友圈！ (boyouquan.com)等博客交流圈子，等我慢慢写博客，然后域名备案下来了，提交申请吧~ 一、新增博客背景虚化图片 ​&#x9;这个很简单，在assets\scss\custom.scss中对body选择器声明块中增加，背景图片即可。&#xA;如果要点击暗色模式的时候，切换背景虚化的颜色。那么需要在为暗色模式的click事件中增加背景虚化的类。&#xA;\主题文件夹\public\ts\main.ts中&#xA;首先在CSS: 使用 .dark-mode 类在暗色模式下应用黑色毛玻璃效果。&#xA;body { background-image: url(&amp;#39;/page/nav-img/background4.jpg&amp;#39;); background-size: cover; background-attachment: fixed; position: relative; transition: background-color 0.3s ease; } body::after { content: &amp;#39;&amp;#39;; position: absolute; top: 0; left: 0; right: 0; bottom: 0; /* 白色模式下的样式 */ background: rgba(176, 176, 176, 0.595); /* 黑色半透明 */ backdrop-filter: blur(10px); /* 毛玻璃效果 */ z-index: -1; // transition: background 0.3s ease, backdrop-filter 0.</description>
    </item>
    <item>
      <title>Hugo主题配置记录-7月23日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.23/</link>
      <pubDate>Mon, 22 Jul 2024 15:41:48 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.23/</guid>
      <description>解决了一些小问题，之前建站留下的小问题&#xA;一、左侧栏的正确跳转 点击图标后跳转到链接栏中有二维码&#xA;config.yaml中修改跳转链接到/post/link即可&#xA;点击&amp;quot;链接&amp;quot;后出现二维码&#xA;二、文章图片的正确插入 1.文章封面图片 \content\post中的文章 ##Front Matter图片插入记得要添加/post/路径 例如： image: /post/123.png&#xA;--- title: 文章标题 date: 2024-07-23 10:00:00 tags: - 标签1 - 标签2 categories: - 分类1 - 分类2 #这里的就是文章封面图片 image: /post/stack-logo-128.png --- 这里注意\content\page\中的文章&#xA;在文章内部的时候，&#xA;![图片](123.jpg)不需要添加/post/路径&#xA;2.文章内部图片 \content\post\中需要添加多个图片&#xA;可以放入文件夹中，避免多个md文件和多个图片堆在一起。【注意：可以不写明在哪个文件夹，直接写/post/文件名即可】&#xA;例如：![image-20240607184445492](/post/123.png)&#xA;![image-20240607184336146](/post/文件夹/123.png)这样详细写明最好，实现图片的插入。&#xA;其实在/post目录中用/post/123.png这样的方式，会自动搜寻/post目录下的123.png文件，（自我理解）所以不用写明中间的/before文件夹。&#xA;最后：&#xA;Front Matter中的links项的路径也一样需要加post，从post路径开始必须指定路径清晰到文件 links: \- title: Bilibili description: bilibili是国内知名的视频弹幕网站,这里有及时的动漫新番,活跃的ACG氛围,有创意的Up主。大家可以在这里找到许多欢乐。 website: https://www.bilibili.com/ image: /post/logo/Bilibili_Logo_Blue.svg </description>
    </item>
    <item>
      <title>Hugo主题配置记录-7月21日博客更新日志</title>
      <link>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.21/</link>
      <pubDate>Sat, 20 Jul 2024 20:01:49 +0000</pubDate>
      <guid>http://localhost:1313/post/%E5%BB%BA%E7%AB%992024.07.21/</guid>
      <description>Hugo主题配置记录 1.引入busuanzi插件进行字数、访问量统计。 \layouts\partials\footer&#xA;footer文件中&#xA;增加以下代码&#xA;&amp;lt;!-- 卜算子统计信息 --&amp;gt; &amp;lt;section class=&amp;#34;count_info&amp;#34;&amp;gt; &amp;lt;!-- 1运行时间 --&amp;gt; &amp;lt;div&amp;gt; {{ T &amp;#34;footer.runtime1&amp;#34; }} &amp;lt;span id=&amp;#34;ds&amp;#34; class=&amp;#34;running-days&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; {{ T &amp;#34;footer.runtime2&amp;#34; }} &amp;lt;span id=&amp;#34;hs&amp;#34; class=&amp;#34;running-days&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; {{ T &amp;#34;footer.runtime3&amp;#34; }} &amp;lt;span id=&amp;#34;ms&amp;#34; class=&amp;#34;running-days&amp;#34;&amp;gt;&amp;lt;/span&amp;gt; {{ T &amp;#34;footer.runtime4&amp;#34; }} &amp;lt;/div&amp;gt; &amp;lt;!-- 2文章个数和字数 --&amp;gt; &amp;lt;div&amp;gt; {{ $scratch := newScratch }} {{ range (where .Site.Pages &amp;#34;Kind&amp;#34; &amp;#34;page&amp;#34;) }} {{ $scratch.Add &amp;#34;total&amp;#34; .WordCount }} {{ end }} &amp;lt;!-- 转换为整数 --&amp;gt; {{ $total := $scratch.</description>
    </item>
  </channel>
</rss>
